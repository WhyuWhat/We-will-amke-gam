[gd_scene load_steps=18 format=3 uid="uid://uyrs2bc8veq3"]

[ext_resource type="Texture2D" uid="uid://1lptcqllfpjx" path="res://assits/Spritesheets/spritesheet.png" id="1_f2v3d"]

[sub_resource type="GDScript" id="GDScript_kx0ok"]
script/source = "extends CharacterBody2D

# Exported variables
@export var walk_speed: float = 130.0
@export var dash_speed: float = 300.0
@export var jump_force: float = -400.0
@export var gravity: float = 1600.0
@export var dash_duration: float = 0.5
@export var turn_duration: float = 0.02  # Duration of the turn animation

# State variables
var is_dashing: bool = false
var is_attacking: bool = false
var is_crouching: bool = false
var is_turning: bool = false
var dash_timer: float = 0.0
var facing_direction: int = 1  # 1 = right, -1 = left
var intended_direction: int = 1

# Animation reference
@onready var anim_player: AnimationPlayer = $AnimationPlayer

func _ready() -> void:
	anim_player.animation_finished.connect(_on_animation_finished)

func _physics_process(delta: float) -> void:
	# Apply gravity
	if not is_on_floor():
		velocity.y += gravity * delta
	else:
		velocity.y = 0  # Reset vertical velocity when on the floor

	# Handle dash state
	if is_dashing:
		dash_timer -= delta
		if dash_timer <= 0:
			is_dashing = false
	else:
		handle_crouch()
		if not is_crouching:
			handle_movement()
			handle_jump()
		handle_attack()

	update_animations()
	move_and_slide()

func handle_movement() -> void:
	var input_dir = Input.get_axis(\"ui_left\", \"ui_right\")
	
	# Update intended direction
	if input_dir != 0:
		intended_direction = 1 if input_dir > 0 else -1
	
	# Handle direction change with turn animation
	if not is_turning and intended_direction != facing_direction and input_dir != 0:
		if not is_attacking and not is_dashing and not is_crouching:
			start_turn()
	
	# Only update movement if not turning
	if not is_turning:
		velocity.x = input_dir * walk_speed
	
	# Start dash
	if Input.is_action_just_pressed(\"dash\") and not is_attacking:
		start_dash(input_dir)

func start_turn() -> void:
	is_turning = true
	anim_player.play(\"turn\")
	await get_tree().create_timer(turn_duration).timeout
	facing_direction = intended_direction
	scale.x = facing_direction
	is_turning = false

func start_dash(input_dir: float) -> void:
	is_dashing = true
	dash_timer = dash_duration
	var dash_direction = input_dir if input_dir != 0 else facing_direction
	velocity.x = dash_direction * dash_speed
	facing_direction = 1 if dash_direction > 0 else -1
	scale.x = facing_direction

func handle_jump() -> void:
	if Input.is_action_just_pressed(\"ui_up\") and is_on_floor() and not is_crouching:
		velocity.y = jump_force

func handle_attack() -> void:
	if Input.is_action_just_pressed(\"attack\") and not is_attacking and is_on_floor() and not is_crouching:
		is_attacking = true
		velocity.x = 0

func handle_crouch() -> void:
	is_crouching = Input.is_action_pressed(\"ui_down\") and is_on_floor() and not is_dashing
	if is_crouching:
		velocity.x = 0

func update_animations() -> void:
	# Flip the scale based on the facing direction
	scale.x = facing_direction

	if is_attacking:
		anim_player.play(\"attack\")
	elif is_dashing:
		anim_player.play(\"roll\")
	elif is_turning:
		anim_player.play(\"turn\")
	elif is_on_floor():
		if is_crouching:
			anim_player.play(\"crouch\")
		else:
			if abs(velocity.x) > 0:
				anim_player.play(\"walk\")
			else:
				anim_player.play(\"idle\")  # Ensure idle plays when not moving
	else:
		anim_player.play(\"jump\" if velocity.y < 0 else \"fall\")

func _on_animation_finished(anim_name: String) -> void:
	if anim_name == \"attack\":
		is_attacking = false
	elif anim_name == \"turn\":
		is_turning = false
"

[sub_resource type="CircleShape2D" id="CircleShape2D_3hqgp"]

[sub_resource type="Animation" id="Animation_o0n6d"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_rgv43"]
resource_name = "attack"
length = 0.6
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [19, 20, 21, 22, 23, 24, 25]
}

[sub_resource type="Animation" id="Animation_elo0c"]
resource_name = "crouch"
length = 0.05
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_lagxk"]
resource_name = "dash"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [15, 16, 17, 18]
}

[sub_resource type="Animation" id="Animation_b4kpq"]
resource_name = "death"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [2]
}

[sub_resource type="Animation" id="Animation_426wy"]
resource_name = "fall"
length = 0.2
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [3, 4]
}

[sub_resource type="Animation" id="Animation_qiuym"]
resource_name = "hurt"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [5, 6, 7, 8]
}

[sub_resource type="Animation" id="Animation_c0mbn"]
resource_name = "idle"
length = 0.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [9, 10]
}

[sub_resource type="Animation" id="Animation_ykwxv"]
resource_name = "jump"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [11, 12]
}

[sub_resource type="Animation" id="Animation_kl05w"]
resource_name = "land"
length = 0.3
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [13, 14]
}

[sub_resource type="Animation" id="Animation_g0wuv"]
resource_name = "roll"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [15, 16, 17, 18]
}

[sub_resource type="Animation" id="Animation_f60hv"]
resource_name = "turn"
length = 0.15
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [26]
}

[sub_resource type="Animation" id="Animation_sw42f"]
resource_name = "walk"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("SpriteFrames:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [27, 28, 29, 30, 31, 32]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_vb1xr"]
_data = {
"RESET": SubResource("Animation_o0n6d"),
"attack": SubResource("Animation_rgv43"),
"crouch": SubResource("Animation_elo0c"),
"dash": SubResource("Animation_lagxk"),
"death": SubResource("Animation_b4kpq"),
"fall": SubResource("Animation_426wy"),
"hurt": SubResource("Animation_qiuym"),
"idle": SubResource("Animation_c0mbn"),
"jump": SubResource("Animation_ykwxv"),
"land": SubResource("Animation_kl05w"),
"roll": SubResource("Animation_g0wuv"),
"turn": SubResource("Animation_f60hv"),
"walk": SubResource("Animation_sw42f")
}

[node name="Player" type="CharacterBody2D"]
z_index = 5
script = SubResource("GDScript_kx0ok")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -7)
scale = Vector2(0.653368, 0.691162)
shape = SubResource("CircleShape2D_3hqgp")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_vb1xr")
}

[node name="SpriteFrames" type="Sprite2D" parent="."]
texture = ExtResource("1_f2v3d")
hframes = 33
